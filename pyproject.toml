[tool]

[tool.poetry]
name = "cockroach_db_api"
version = "0.0.0"
authors = ["Marco Gancitano <marco.gancitano97@gmail.com>"]
description = "Building a FastAPI with Cockroach DB"
readme = "README.md"
classifiers=[
    'Natural Language :: English',
    'Programming Language :: Python :: 3.8',
]
include = [
    "cockroach_db_api/py.typed"
]

[tool.poetry.dependencies]
python = "^3.8"
alembic = "^1.4.2"
bcrypt = "^3.1.7"
email-validator = "^1.1.1"
fastapi = "^0.70.0"
fastapi-crudrouter = "^0.8.5"
django-environ = "^0.4.5"
google-api-core = "^1.22.0"
google-cloud-core = "^1.3.0"
google-cloud-logging = "^2.3.1"
google-cloud-secret-manager = "^1.0.0"
gunicorn = "^20.0.4"
Jinja2 = "^2.11.2"
passlib = "^1.7.2"
psycopg2-binary = "^2.8.5"
PyJWT = "^1.7.1"
python-dateutil = "^2.8.2"
python-multipart = "^0.0.5"
SQLAlchemy-Utils = "0.36.8"
SQLAlchemy = "1.3.18"
sqlalchemy-cockroachdb = "^1.4.3"
uvicorn = "^0.11.7"


[tool.poetry.dev-dependencies]
pytest = "^6.0"
pytest-cov = "^2.10.1"
mock = "^4.0.0"
flake8 = "^3.8.4"
flake8-docstrings = "1.5.0"
flake8-import-order = "0.18.1"
flake8-colors = "0.1.6"
black = "20.8b1"
mypy = "0.790"

[tool.black]
line-length=100
include = '''
(
  /(
      v1
    | tests
  )/
  | config.py
  | database.py
  | main.py
  | models.py
)
'''
exclude = '''\.json'''
# --------------------------------------------------------------------------------------------
# Use `pylint --help-msg=W0232` to get the more readable form and a definition of this error
# --------------------------------------------------------------------------------------------
# C0301: Line too long  # Checked by flake8 and can't figure out how to add ignore to pylint
# R0911: Too many returns
# R0913: Too many arguments
# R1710: Either all return statements in a function should return an expression, or none of them should.
[tool.pylint.message_control]
disable="C0301, R0911, R0913, R1710"

[tool.pylint.reports]
output-format="colorized"
reports="y"
include-ids="yes"
msg-template="{msg_id}:{line:3d},{column}: {obj}: {msg}"
[tool.pytest.ini_options]
addopts = "--cov=v1/ --cov-branch --cov-report term-missing  -vv --color=yes --cov-fail-under 100"
python_files = "tests.py test_*.py *_tests.py"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
